//- shape: (circle|star)
//- text: text inside button
//- icon: (arrow|heart)
//- size: (s|m)
//- background: (purple-gradient)
//- border: (s|m)
mixin button(parameters)
    -
        let attrs = {
            class: 'button',
            type :'button'
        }

        switch (parameters.shape) {
            case 'circle':
                attrs.class += ' button_shape_circle';
                break;
            case 'star':
                attrs.class += ' button_shape_star';
                parameters.text = '';
        }

        switch (parameters.icon) {
            case 'arrow':
                attrs.class += ' button_icon_arrow';
                break;
            case 'heart':
                attrs.class += ' button_icon_heart';
        }

        switch (parameters.size) {
            case 'b':
                attrs.class += ' button_size_b';
                break;
            case 'm':
                attrs.class += ' button_size_m';
                break;
            case 's':
                attrs.class += ' button_size_s';
        }

        switch (parameters.background) {
            case 'purple-gradient':
                attrs.class += ' button_background_purple-gradient';
                break;
        }

        if (parameters.border) {
            attrs.class += ' button_background_border';
            attrs.class += (parameters.border == 'thin') ? ' button_border_thin' : ' button_border_thick';
        }

    include ./__icon_arrow/button__icon_arrow.pug
    include ./__icon_heart/button__icon_heart.pug

    div&attributes(attributes)&attributes(attrs)= parameters.text
        case parameters.icon
            when 'heart'
                +button__icon_heart()
            when 'arrow'
                +button__icon_arrow()
    